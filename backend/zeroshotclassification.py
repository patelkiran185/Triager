# -*- coding: utf-8 -*-
"""zeroShotClassification.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1h0mUqWzta3fsN1vc6h6Y2H_VyG8V5tPa
"""



from transformers import pipeline

# Initialize zero-shot-classification pipeline
classifier = pipeline("zero-shot-classification", model="facebook/bart-large-mnli")

# Candidate priority labels with descriptions
labels = [
    "P0: Critical (production outage, urgent, security incident)",
    "P1: High (major feature broken, many users affected)",
    "P2: Medium (moderate issue, some impact)",
    "P3: Low (minor issue, feature request, cosmetic)"
]


# --- FastAPI endpoint to classify all ticket descriptions from Turso ---
from fastapi import FastAPI
from libsql_client import create_client
import asyncio

app = FastAPI()

# Turso DB config (reuse from main.py or set here)
DATABASE_URL = "https://customers-kiranpatel.aws-ap-northeast-1.turso.io"
DATABASE_TOKEN = "eyJhbGciOiJFZERTQSIsInR5cCI6IkpXVCJ9.eyJhIjoicnciLCJpYXQiOjE3NTcxNDgzNTAsImlkIjoiNjllYjM0MmMtOWY5ZS00MWIyLTg0MTctMDZjYWI0YTNkNTczIiwicmlkIjoiOWI4ZmUxZTctZjFmMi00OTQwLTg5NTEtYjgxNjMzYmUyNjJjIn0.HJ77N1Kbh9kdVdE857l1Eu3M4JsPkHCVcQQ2UwGIZBUk1F6wipJlNN0oycnSaJBE1Xr7znFJwsRo8GD0C2G_DQ"
client = create_client(DATABASE_URL, auth_token=DATABASE_TOKEN)

@app.get("/classify_descriptions/")
async def classify_all_descriptions():
    # Fetch all descriptions from Turso
    rows = await client.execute("SELECT description FROM customers")
    descriptions = [row["description"] for row in rows]
    results = []
    for desc in descriptions:
        print(f"Feeding to model: {desc}")
        result = classifier(desc, candidate_labels=labels, multi_label=False)
        # Extract priority and confidence
        priority_label = result["labels"][0].split(":")[0]
        confidence = result["scores"][0]
        rationale = f'Ticket classified as "{priority_label}" with confidence {confidence:.2f} based on ticket content.'
        results.append({
            "description": desc,
            "priority": priority_label,
            "confidence": confidence,
            "rationale": rationale
        })
    return results

